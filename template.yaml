AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: API SPENDING-ANALYZER
Resources:
  api:
    Type: AWS::Serverless::Api
    Properties:
      Cors:
        AllowMethods: "'POST, GET'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
      BinaryMediaTypes:
        - multipart~1form-data
      Name: !Sub
        - ${ResourceName}
        - ResourceName: api-spending-analyzer
      
      StageName: hml
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
      DefinitionBody:
        swagger: '2.0'
        info: {}
        paths:
          /register:              
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${getAllRegisters.Arn}/invocations
              responses: {}
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${createRegister.Arn}/invocations
              responses: {}
          /tag:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${getAlltags.Arn}/invocations
              responses: {}
          
  getAllRegisters:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-getAllRegisters
      Description: !Sub
        - Stackery Stack ${StackeryStackTagName} Environment ${StackeryEnvironmentTagName} Function ${ResourceName}
        - ResourceName: getAllRegisters
      CodeUri: src/register/get_all
      Handler: handler.handler
      Runtime: python3.8
      Timeout: 30
      Tracing: Active
      Layers:
        - !Ref core
      Policies:
        - AmazonRDSDataFullAccess
      Events:
        apiGETallRegisters:
          Type: Api
          Properties:                            
            Path: /register
            Method: GET
            RestApiId: !Ref api
    Metadata:
      StackeryName: getAllRegisters
  createRegister:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-createRegister
      Description: !Sub
        - Stackery Stack ${StackeryStackTagName} Environment ${StackeryEnvironmentTagName} Function ${ResourceName}
        - ResourceName: createRegister
      CodeUri: src/register/create
      Handler: handler.handler
      Runtime: python3.8
      Timeout: 30
      Tracing: Active
      Layers:
        - !Ref core
      Policies:
        - AmazonRDSDataFullAccess
      Events:
        apiCreateRegister:
          Type: Api
          Properties:                            
            Path: /register
            Method: POST
            RestApiId: !Ref api
    Metadata:
      StackeryName: createRegister
  getAlltags:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-getAlltags
      Description: !Sub
        - Stackery Stack ${StackeryStackTagName} Environment ${StackeryEnvironmentTagName} Function ${ResourceName}
        - ResourceName: getAlltags
      CodeUri: src/tag/get_all
      Handler: handler.handler
      Runtime: python3.8
      Timeout: 60
      Tracing: Active
      Layers:
        - !Ref core
      Policies:
        - AmazonRDSDataFullAccess
      Events:
        apiGetAlltags:
          Type: Api
          Properties:                            
            Path: /tag
            Method: GET
            RestApiId: !Ref api
    Metadata:
      StackeryName: getAlltags
  core:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: project-core
      Description: Projeto
      ContentUri: src/core/
      CompatibleRuntimes:
        - python3.8
  
Parameters:
  StackeryStackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  StackeryEnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  StackeryEnvironmentAPIGatewayStageName:
    Type: String
    Description: Environment name used for API Gateway Stage names (injected by Stackery at deployment time)