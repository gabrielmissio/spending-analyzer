AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  spending-analyzer

  Sample SAM Template for spending-analyzer

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10

Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello_world/
      Handler: app.lambda_handler
      Runtime: python3.8
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get
  createRegister:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/register/create
      Handler: handler.handler
      Runtime: python3.8
      Layers:
        - !Ref dependencies
        - !Ref core
      Events:
        createRegister:
          Type: Api 
          Properties:
            Path: /register
            Method: post
    Metadata:
      StackeryName: createRegister
  getRegisterById:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/register/get
      Handler: handler.handler
      Runtime: python3.8
      Layers:
        - !Ref dependencies
        - !Ref core
      Events:
        getRegisterById:
          Type: Api 
          Properties:
            Path: /register/{id}
            Method: get
  getAllRegisters:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/register/get_all
      Handler: handler.handler
      Runtime: python3.8
      Layers:
        - !Ref dependencies
        - !Ref core
      Events:
        getAllRegisters:
          Type: Api
          Properties:
            Path: /register
            Method: get
  updateRegisterById:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/register/update
      Handler: handler.handler
      Runtime: python3.8
      Layers:
        - !Ref dependencies
        - !Ref core
      Events:
        updateRegisterById:
          Type: Api 
          Properties:
            Path: /register/{id}
            Method: put
  createTag:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/tag/create
      Handler: handler.handler
      Runtime: python3.8
      Layers:
        - !Ref dependencies
        - !Ref core
      Events:
        createTag:
          Type: Api 
          Properties:
            Path: /tag
            Method: post
  getTagById:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/tag/get
      Handler: handler.handler
      Runtime: python3.8
      Layers:
        - !Ref dependencies
        - !Ref core
      Events:
        getTagById:
          Type: Api 
          Properties:
            Path: /tag/{id}
            Method: get
  updateTagById:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/tag/update
      Handler: handler.handler
      Runtime: python3.8
      Layers:
        - !Ref dependencies
        - !Ref core
      Events:
        getTagById:
          Type: Api 
          Properties:
            Path: /tag/{id}
            Method: put
  getAllTags:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/tag/get_all
      Handler: handler.handler
      Runtime: python3.8
      Layers:
        - !Ref dependencies
        - !Ref core
      Events:
        getTagById:
          Type: Api 
          Properties:
            Path: /tag
            Method: get
  dependencies:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: project-dependencies
      Description: Dependencias
      ContentUri: dependencies/
      CompatibleRuntimes:
        - python3.8
  core:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: project-core
      Description: Core
      ContentUri: src/core/
      CompatibleRuntimes:
        - python3.8


Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
